// <auto-generated />
using System;
using Constructora.Presentacion.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Constructora.Presentacion.Web.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Constructora.Presentacion.Web.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("Varchar(100)");

                    b.Property<bool>("Remove")
                        .HasColumnType("Bit");

                    b.Property<string>("Url")
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("File");
                });

            modelBuilder.Entity("Constructora.Presentacion.Web.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Key")
                        .HasColumnType("Varchar(500)");

                    b.Property<bool>("Remove")
                        .HasColumnType("Bit");

                    b.Property<int>("UserId")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("Constructora.Presentacion.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("Varchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("Varchar(100)");

                    b.Property<bool>("Remove")
                        .HasColumnType("Bit");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("Int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Constructora.Presentacion.Web.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("Varchar(100)");

                    b.Property<bool>("Remove")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("Constructora.Presentacion.Web.Models.Token", b =>
                {
                    b.HasOne("Constructora.Presentacion.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Constructora.Presentacion.Web.Models.User", b =>
                {
                    b.HasOne("Constructora.Presentacion.Web.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
